<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Suresh Choudhary - MERN Stack Developer</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" xintegrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc;
        }
        .skill-bar-fill {
            transition: width 0.8s ease-in-out;
        }
        .modal-backdrop {
            transition: opacity 0.3s ease;
        }
        .modal-content {
            transition: transform 0.3s ease;
        }
        .spinner {
            border-top-color: #4f46e5;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        #hero-canvas {
            display: block;
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 1;
        }
        .hero-content {
            position: relative;
            z-index: 2;
        }
    </style>
</head>
<body class="text-gray-800">

    <!-- Header -->
    <header id="header" class="bg-white/80 backdrop-blur-md shadow-sm sticky top-0 z-50">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
            <a href="#" class="text-2xl font-bold text-gray-900">Suresh Choudhary</a>
            <div class="hidden md:flex space-x-8 items-center">
                <a href="#about" class="text-gray-600 hover:text-indigo-600 transition duration-300">About</a>
                <a href="#skills" class="text-gray-600 hover:text-indigo-600 transition duration-300">Skills</a>
                <a href="#projects" class="text-gray-600 hover:text-indigo-600 transition duration-300">Projects</a>
                <a href="#education" class="text-gray-600 hover:text-indigo-600 transition duration-300">Education</a>
                <a href="#contact" class="bg-indigo-600 text-white px-4 py-2 rounded-full hover:bg-indigo-700 transition duration-300">Contact</a>
            </div>
            <button id="mobile-menu-button" class="md:hidden" aria-label="Open mobile menu">
                <i class="fas fa-bars text-2xl"></i>
            </button>
        </nav>
        <!-- Mobile Menu -->
        <div id="mobile-menu" class="hidden md:hidden px-6 pb-4">
            <a href="#about" class="block py-2 text-gray-600 hover:text-indigo-600">About</a>
            <a href="#skills" class="block py-2 text-gray-600 hover:text-indigo-600">Skills</a>
            <a href="#projects" class="block py-2 text-gray-600 hover:text-indigo-600">Projects</a>
            <a href="#education" class="block py-2 text-gray-600 hover:text-indigo-600">Education</a>
            <a href="#contact" class="block mt-2 bg-indigo-600 text-white px-4 py-2 rounded-full text-center hover:bg-indigo-700">Contact</a>
        </div>
    </header>

    <main>
        <!-- 3D Hero Section -->
        <section id="home" class="relative py-20 md:py-32 bg-gray-900 text-white overflow-hidden h-screen flex items-center justify-center">
            <canvas id="hero-canvas"></canvas>
            <div class="hero-content container mx-auto px-6 text-center">
                <div class="w-48 h-48 mx-auto mb-6">
                    <!-- Replace this placeholder image with your professional headshot or logo -->
                    <img src="https://placehold.co/192x192/E0E0E0/333333?text=SC" alt="Suresh Choudhary" class="rounded-full w-full h-full object-cover shadow-lg border-4 border-white">
                </div>
                <h1 class="text-4xl md:text-6xl font-bold">Suresh Choudhary</h1>
                <p class="mt-4 text-xl text-gray-300">MERN Stack Developer | Mobile App Developer | AI/ML Enthusiast</p>
                <div class="mt-8 flex justify-center gap-4">
                    <a href="#contact" class="bg-indigo-500 text-white px-6 py-3 rounded-full font-semibold hover:bg-indigo-600 transition duration-300">Get in Touch</a>
                    <!-- Replace '#' with the actual link to your downloadable CV (e.g., a PDF hosted online) -->
                    <a href="#" class="bg-white text-indigo-600 border border-indigo-600 px-6 py-3 rounded-full font-semibold hover:bg-indigo-50 transition duration-300">Download CV</a>
                </div>
            </div>
        </section>

        <!-- About Section -->
        <section id="about" class="py-20">
            <div class="container mx-auto px-6">
                <h2 class="text-3xl font-bold text-center mb-12">About Me</h2>
                <div class="max-w-4xl mx-auto bg-white p-8 rounded-xl shadow-md">
                    <h3 class="font-bold text-xl mb-2 text-gray-900">Professional Summary</h3>
                    <p id="professional-summary" class="text-gray-600 mb-6">
                        Hi! I'm Suresh Choudhary, a MERN Stack Developer who enjoys creating fast, user-friendly websites and web applications. I specialize in building clean and responsive interfaces using React.js on the frontend, and robust, secure backends with Node.js and Express.js. I manage data efficiently with MongoDB and ensure seamless performance across applications. Alongside web development, I have experience with Python, C, and Java, and I'm currently exploring Machine Learning to develop smart, real-world solutions. I'm passionate about problem-solving, developing impactful projects, and constantly learning new technologies to grow as a developer.
                    </p>
                    <h3 class="font-bold text-xl mb-2 text-gray-900">Career Objective</h3>
                    <p id="career-objective" class="text-gray-600">
                        Motivated and enthusiastic MCA student seeking an entry-level opportunity in the IT industry to apply academic knowledge and gain hands-on experience. Eager to contribute to team success through hard work, attention to detail, and a passion for learning new technologies.
                    </p>
                </div>
            </div>
        </section>

        <!-- Skills Section -->
        <section id="skills" class="py-20 bg-white">
            <div class="container mx-auto px-6">
                <h2 class="text-3xl font-bold text-center mb-12">My Skills</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">Web Development</h3>
                        <ul class="space-y-4"><li>HTML & CSS</li><li>React.js</li><li>Node.js & Express.js</li><li>MongoDB</li></ul>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">Mobile App Development</h3>
                        <ul class="space-y-4"><li>Android Studio</li><li>Java & Kotlin</li><li>XML & Jetpack Compose</li></ul>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">3D Design & Animation</h3>
                        <ul class="space-y-4"><li>Three.js</li><li>Blender (Basic)</li></ul>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">Programming Languages</h3>
                        <ul class="space-y-4"><li>JavaScript</li><li>Python</li><li>Java</li><li>C</li></ul>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">Database Management</h3>
                        <ul class="space-y-4"><li>MySQL</li><li>SQLite</li><li>Firebase</li><li>Supabase</li></ul>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">Tools & Platforms</h3>
                        <div class="space-y-5 mt-4">
                            <div class="skill"><div class="flex justify-between mb-1"><span class="font-medium">Git</span><span class="text-sm font-medium text-indigo-700">80%</span></div><div class="w-full bg-gray-200 rounded-full h-2.5"><div class="bg-indigo-600 h-2.5 rounded-full skill-bar-fill" style="width: 0%" data-width="80%"></div></div></div>
                            <div class="skill"><div class="flex justify-between mb-1"><span class="font-medium">GitHub</span><span class="text-sm font-medium text-indigo-700">75%</span></div><div class="w-full bg-gray-200 rounded-full h-2.5"><div class="bg-indigo-600 h-2.5 rounded-full skill-bar-fill" style="width: 0%" data-width="75%"></div></div></div>
                            <div class="skill"><div class="flex justify-between mb-1"><span class="font-medium">Postman</span><span class="text-sm font-medium text-indigo-700">80%</span></div><div class="w-full bg-gray-200 rounded-full h-2.5"><div class="bg-indigo-600 h-2.5 rounded-full skill-bar-fill" style="width: 0%" data-width="80%"></div></div></div>
                            <div class="skill"><div class="flex justify-between mb-1"><span class="font-medium">JWT</span><span class="text-sm font-medium text-indigo-700">85%</span></div><div class="w-full bg-gray-200 rounded-full h-2.5"><div class="bg-indigo-600 h-2.5 rounded-full skill-bar-fill" style="width: 0%" data-width="85%"></div></div></div>
                            <div class="skill"><div class="flex justify-between mb-1"><span class="font-medium">REST APIs</span><span class="text-sm font-medium text-indigo-700">85%</span></div><div class="w-full bg-gray-200 rounded-full h-2.5"><div class="bg-indigo-600 h-2.5 rounded-full skill-bar-fill" style="width: 0%" data-width="85%"></div></div></div>
                        </div>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-4">AI/ML Integration</h3>
                        <ul class="space-y-4"><li>TensorFlow Lite (mobile)</li><li>Gemini API</li></ul>
                    </div>
                </div>
            </div>
        </section>

        <!-- Projects Section -->
        <section id="projects" class="py-20">
            <div class="container mx-auto px-6">
                <h2 class="text-3xl font-bold text-center mb-4">Projects</h2>
                <p class="text-center text-gray-600 mb-8 max-w-2xl mx-auto">Here are some AI-generated project ideas based on my skills. Feel free to explore them!</p>
                
                
                    <!-- Manually added project based on user's image -->
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <h3 class="text-xl font-semibold mb-2">MERN Stack E-commerce Platform</h3>
                        <p class="text-gray-600 mb-4">Developed a full-stack e-commerce application using MongoDB, Express.js, React.js, and Node.js.</p>
                        <ul class="list-disc list-inside text-gray-700">
                            <li>MongoDB</li>
                            <li>Express.js</li>
                            <li>React.js</li>
                            <li>Node.js</li>
                        </ul>
                    </div>
                    <!-- AI Generated Project Ideas will be inserted here -->
                </div>
            </div>
        </section>
        
        <!-- Education Section -->
        <section id="education" class="py-20 bg-white">
            <div class="container mx-auto px-6">
                <h2 class="text-3xl font-bold text-center mb-12">Education</h2>
                <div class="max-w-2xl mx-auto">
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm mb-6">
                        <div class="flex justify-between items-start">
                            <div><h3 class="text-xl font-bold">Master Of Computer Application (MCA)</h3><p class="text-indigo-600">Ganpat University</p></div>
                            <span class="bg-indigo-100 text-indigo-800 text-sm font-medium px-2.5 py-0.5 rounded-full">2024-2026</span>
                        </div>
                    </div>
                    <div class="bg-gray-50 p-6 rounded-xl shadow-sm">
                        <div class="flex justify-between items-start">
                            <div><h3 class="text-xl font-bold">B.S.C</h3><p class="text-indigo-600">Jai Narain Vyas University</p></div>
                            <span class="bg-indigo-100 text-indigo-800 text-sm font-medium px-2.5 py-0.5 rounded-full">2022-2024</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Contact Section -->
        <section id="contact" class="py-20">
            <div class="container mx-auto px-6">
                <h2 class="text-3xl font-bold text-center mb-12">Contact Me</h2>
                <div class="max-w-4xl mx-auto">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
                        <!-- Standard Contact Info -->
                        <div class="text-center md:text-left">
                            <p class="text-lg text-gray-600 mb-8">Feel free to reach out for any opportunities or just to say hi!</p>
                            <div class="space-y-4">
                                <a href="mailto:patrisureshkumar67338@gmail.com" class="flex items-center justify-center md:justify-start gap-3 text-gray-700 hover:text-indigo-600 transition duration-300 text-lg"><i class="fas fa-envelope w-6"></i><span>patrisureshkumar67338@gmail.com</span></a>
                                <a href="tel:7014148326" class="flex items-center justify-center md:justify-start gap-3 text-gray-700 hover:text-indigo-600 transition duration-300 text-lg"><i class="fas fa-phone w-6"></i><span>+91 7014148326</span></a>
                                <div class="flex items-center justify-center md:justify-start gap-3 text-gray-600 text-lg"><i class="fas fa-map-marker-alt w-6"></i><span>Sankad, Sanchore, Jalore, Rajasthan - 343040</span></div>
                            </div>
                        </div>

                        <!-- AI Cover Letter Generator -->
                        <div class="bg-white p-8 rounded-xl shadow-md">
                            <h3 class="text-xl font-bold mb-2 text-center">✨ AI Cover Letter Assistant</h3>
                            <p class="text-gray-600 text-center mb-4">Recruiter? Paste a job description below to see how my skills align with your needs.</p>
                            <textarea id="job-description" class="w-full h-32 p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition" placeholder="Paste job description here..."></textarea>
                            <button id="generate-letter-btn" class="w-full mt-4 bg-indigo-600 text-white px-6 py-3 rounded-full font-semibold hover:bg-indigo-700 transition duration-300">Generate Cover Letter</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

    </main>

    <!-- Footer -->
    <footer class="bg-gray-900 text-white py-8">
        <div class="container mx-auto px-6 text-center">
            <div class="flex justify-center space-x-6 mb-4">
                <!-- Replace '#' with your actual GitHub profile link -->
                <a href="#" class="text-gray-400 hover:text-white transition duration-300 text-2xl" aria-label="GitHub Profile"><i class="fab fa-github"></i></a>
                <!-- Replace '#' with your actual LinkedIn profile link -->
                <a href="#" class="text-gray-400 hover:text-white transition duration-300 text-2xl" aria-label="LinkedIn Profile"><i class="fab fa-linkedin"></i></a>
                <!-- Replace '#' with your actual Twitter/X profile link -->
                <a href="#" class="text-gray-400 hover:text-white transition duration-300 text-2xl" aria-label="Twitter Profile"><i class="fab fa-twitter"></i></a>
            </div>
            <p>&copy; 2024 Suresh Choudhary. All Rights Reserved.</p>
        </div>
    </footer>

    <!-- Modal for Loading and Displaying AI Content -->
    <div id="ai-modal" class="fixed inset-0 bg-gray-900 bg-opacity-50 modal-backdrop flex items-center justify-center p-4 z-50 opacity-0 hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div id="modal-content" class="bg-white rounded-xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto p-6 md:p-8 transform scale-95">
            <div id="modal-header" class="flex justify-between items-center border-b pb-3 mb-4">
                <h2 id="modal-title" class="text-xl font-bold">Generating...</h2>
                <button id="close-modal-btn" class="text-gray-500 hover:text-gray-800" aria-label="Close modal">&times;</button>
            </div>
            <div id="modal-body">
                <div id="modal-loader" class="flex flex-col items-center justify-center p-8">
                    <div class="spinner w-12 h-12 rounded-full border-4 border-gray-200"></div>
                    <p class="mt-4 text-gray-600">The AI is thinking, please wait...</p>
                </div>
                <div id="modal-result" class="prose max-w-none text-gray-700 hidden"></div>
                <!-- Copy to Clipboard button for cover letter -->
                <button id="copy-letter-btn" class="mt-4 bg-indigo-600 text-white px-6 py-3 rounded-full font-semibold hover:bg-indigo-700 transition duration-300 hidden">Copy Letter</button>
            </div>
        </div>
    </div>


    <script>
        // --- 3D Hero Animation ---
        window.onload = function() {
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({
                canvas: document.getElementById('hero-canvas'),
                alpha: true // Allows for transparent background
            });
            renderer.setSize(window.innerWidth, window.innerHeight);

            const particleGroup = new THREE.Group();
            scene.add(particleGroup);

            const particleCount = 5000;
            const particles = new THREE.BufferGeometry();
            const positions = new Float32Array(particleCount * 3);

            // Generate random positions for particles
            for (let i = 0; i < particleCount * 3; i++) {
                positions[i] = (Math.random() - 0.5) * 10; // Distribute particles in a cube
            }

            particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));
            const particleMaterial = new THREE.PointsMaterial({
                color: 0xffffff, // White particles
                size: 0.015,     // Small particle size
                transparent: true,
                blending: THREE.AdditiveBlending // For a glowing effect
            });
            const particleSystem = new THREE.Points(particles, particleMaterial);
            particleGroup.add(particleSystem);
            
            camera.position.z = 5; // Position the camera back

            let mouseX = 0, mouseY = 0;
            // Update mouse coordinates for camera movement
            document.addEventListener('mousemove', (event) => {
                mouseX = (event.clientX - window.innerWidth / 2) / 100;
                mouseY = (event.clientY - window.innerHeight / 2) / 100;
            });

            // Animation loop
            const animate = function () {
                requestAnimationFrame(animate);

                // Rotate particle group
                particleGroup.rotation.y += 0.0005;
                particleGroup.rotation.x += 0.0005;

                // Smoothly move camera towards mouse position
                camera.position.x += (mouseX - camera.position.x) * 0.05;
                camera.position.y += (-mouseY - camera.position.y) * 0.05;
                camera.lookAt(scene.position); // Always look at the center of the scene

                renderer.render(scene, camera);
            };

            // Handle window resizing
            window.addEventListener('resize', () => {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });

            animate(); // Start the animation loop
        };


        // --- Basic UI functionality (Mobile Menu, Skills Animation, Smooth Scrolling) ---
        const mobileMenuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        mobileMenuButton.addEventListener('click', () => mobileMenu.classList.toggle('hidden'));

        const skillBars = document.querySelectorAll('.skill-bar-fill');
        const skillsSection = document.getElementById('skills');

        // Function to animate skill bars when skills section is in view
        const animateSkills = () => {
            if (skillsSection.getBoundingClientRect().top < window.innerHeight - 100) {
                skillBars.forEach(bar => bar.style.width = bar.getAttribute('data-width') + '%'); // Apply width as percentage
                window.removeEventListener('scroll', animateSkills); // Remove listener after animation
            }
        };
        window.addEventListener('scroll', animateSkills);
        animateSkills(); // Call once on load in case skills section is already in view

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                // Close mobile menu if open
                if (!mobileMenu.classList.contains('hidden')) mobileMenu.classList.add('hidden');
                
                const targetId = this.getAttribute('href');
                // Only attempt to scroll if the href is a valid ID selector (not just '#')
                if (targetId && targetId !== '#') {
                    const targetElement = document.querySelector(targetId);
                    if (targetElement) {
                        targetElement.scrollIntoView({ behavior: 'smooth' });
                    }
                }
            });
        });

        // --- Gemini API Integration and Modal Handling ---
        const modal = document.getElementById('ai-modal');
        const modalContent = document.getElementById('modal-content');
        const modalTitle = document.getElementById('modal-title');
        const modalLoader = document.getElementById('modal-loader');
        const modalResult = document.getElementById('modal-result');
        const closeModalBtn = document.getElementById('close-modal-btn');
        const generateProjectsBtn = document.getElementById('generate-projects-btn');
        const generateLetterBtn = document.getElementById('generate-letter-btn');
        const projectIdeasContainer = document.getElementById('project-ideas-container');
        const copyLetterBtn = document.getElementById('copy-letter-btn'); // New copy button

        /**
         * Shows the AI modal with a loading spinner.
         * @param {string} title - The title to display in the modal header.
         */
        function showModal(title) {
            modalTitle.textContent = title;
            modal.classList.remove('hidden');
            modalLoader.classList.remove('hidden');
            modalResult.classList.add('hidden');
            copyLetterBtn.classList.add('hidden'); // Hide copy button initially
            document.body.style.overflow = 'hidden'; // Prevent scrolling background
            // Animate modal entry
            setTimeout(() => {
                modal.classList.remove('opacity-0');
                modalContent.classList.remove('scale-95');
            }, 10);
        }

        /**
         * Hides the AI modal.
         */
        function hideModal() {
            document.body.style.overflow = ''; // Restore scrolling
            modal.classList.add('opacity-0');
            modalContent.classList.add('scale-95');
            // Animate modal exit, then hide
            setTimeout(() => {
                modal.classList.add('hidden');
                modalResult.innerHTML = ''; // Clear content when hidden
            }, 300);
        }
        
        // Event listeners for modal close buttons
        closeModalBtn.addEventListener('click', hideModal);
        modal.addEventListener('click', (e) => {
            if (e.target === modal) hideModal(); // Close if clicking outside content
        });

        /**
         * Calls the Gemini API with a given prompt and returns the generated text.
         * Handles loading states and errors.
         * @param {string} prompt - The text prompt for the Gemini API.
         * @returns {Promise<string>} - A promise that resolves with the generated text or an error message.
         */
        async function callGemini(prompt) {
            const apiKey = ""; // This will be handled by the execution environment
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;
            const payload = { contents: [{ role: "user", parts: [{ text: prompt }] }] };
            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error("Gemini API Error Response:", errorData);
                    throw new Error(`API call failed with status: ${response.status} - ${errorData.error?.message || 'Unknown error'}`);
                }
                const result = await response.json();
                if (result.candidates && result.candidates.length > 0 &&
                    result.candidates[0].content && result.candidates[0].content.parts &&
                    result.candidates[0].content.parts.length > 0) {
                    return result.candidates[0].content.parts[0].text;
                } else {
                    throw new Error("No content generated or unexpected response structure.");
                }
            } catch (error) {
                console.error("Gemini API Error:", error);
                return `<p class="text-red-500">Sorry, an error occurred while generating content: ${error.message}. Please try again.</p>`;
            }
        }

        // Event listener for generating project ideas
        generateProjectsBtn.addEventListener('click', async () => {
            showModal('Generating Project Ideas...');
            generateProjectsBtn.disabled = true; // Disable button during generation
            generateProjectsBtn.textContent = 'Generating...';

            // Prompt adjusted to request a more structured HTML output for easier parsing
            const prompt = `Based on the following skills: MERN Stack (MongoDB, Express.js, React.js, Node.js), Mobile App Development (Android with Java/Kotlin), 3D Design (Three.js), and AI/ML integration with the Gemini API, generate 3 innovative and practical project ideas for a student portfolio. For each idea, provide a title, a brief description, and the key technologies used.
            
            Format each project as a distinct HTML block like this:
            <div class="project-item">
                <h3>[Project Title]</h3>
                <p>[Brief Description]</p>
                <ul>
                    <li>[Technology 1]</li>
                    <li>[Technology 2]</li>
                    <li>...</li>
                </ul>
            </div>
            Ensure the entire output is valid HTML with no extra text outside these blocks.`;
            
            const resultHtml = await callGemini(prompt);

            // Hide loader and show result
            modalLoader.classList.add('hidden');
            modalResult.classList.remove('hidden');
            modalTitle.textContent = "AI-Generated Project Ideas";

            // Parse the generated HTML and inject into styled cards
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = resultHtml;
            
            const projectItems = tempDiv.querySelectorAll('.project-item');
            // Clear only AI-generated content, keep existing static projects
            // projectIdeasContainer.innerHTML = ''; 

            if (projectItems.length > 0) {
                projectItems.forEach(item => {
                    const cardDiv = document.createElement('div');
                    cardDiv.className = 'bg-gray-50 p-6 rounded-xl shadow-sm'; // Apply consistent styling

                    const title = item.querySelector('h3');
                    if (title) {
                        title.className = 'text-xl font-semibold mb-2'; // Apply styling
                        cardDiv.appendChild(title);
                    }

                    const description = item.querySelector('p');
                    if (description) {
                        description.className = 'text-gray-600 mb-4'; // Apply styling
                        cardDiv.appendChild(description);
                    }

                    const techList = item.querySelector('ul');
                    if (techList) {
                        techList.className = 'list-disc list-inside text-gray-700'; // Apply styling
                        cardDiv.appendChild(techList);
                    }
                    projectIdeasContainer.appendChild(cardDiv);
                });
            } else {
                // If no AI projects are generated, ensure a message is shown or previous projects remain
                // projectIdeasContainer.innerHTML = `<p class="text-center text-red-500">Could not generate project ideas. Please try again.</p>`;
            }
            
            hideModal(); // Hide the modal after processing
            generateProjectsBtn.disabled = false; // Re-enable button
            generateProjectsBtn.textContent = '✨ Generate Project Ideas';
        });

        // Event listener for generating cover letter
        generateLetterBtn.addEventListener('click', async () => {
            const jobDescription = document.getElementById('job-description').value;
            if (!jobDescription.trim()) {
                // Using a custom modal for alerts is better, so we'll simulate one here
                showModal('Input Required');
                modalLoader.classList.add('hidden');
                modalResult.classList.remove('hidden');
                modalResult.innerHTML = '<p class="text-red-500">Please paste a job description first.</p>';
                copyLetterBtn.classList.add('hidden'); // Ensure copy button is hidden for error messages
                modalTitle.textContent = "Error";
                return;
            }

            showModal('Generating Cover Letter...');
            generateLetterBtn.disabled = true; // Disable button during generation
            generateLetterBtn.textContent = 'Generating...';

            const professionalSummary = document.getElementById('professional-summary').textContent.trim();
            const careerObjective = document.getElementById('career-objective').textContent.trim();
            const prompt = `You are a professional career coach writing on behalf of Suresh Choudhary. Write a compelling and professional cover letter for a job application.
            
            Applicant's Information:
            - Professional Summary: ${professionalSummary}
            - Career Objective: ${careerObjective}
            
            Job Description to apply for:
            ---
            ${jobDescription}
            ---
            
            Instructions:
            1. Tailor the letter specifically to the job description.
            2. Highlight Suresh's relevant skills from his summary (MERN stack, mobile dev, AI/ML with Gemini API, 3D Design).
            3. Express genuine enthusiasm for the role and the company.
            4. Maintain a professional and confident tone.
            5. The output should be the cover letter text only, formatted with paragraphs. Do not include salutations or closings that are typically added manually (e.g., "Dear Hiring Manager," or "Sincerely,"). Focus purely on the body content.`;
            
            const resultText = await callGemini(prompt);
            
            modalLoader.classList.add('hidden');
            modalResult.classList.remove('hidden');
            modalTitle.textContent = "Generated Cover Letter Draft";
            
            // Format the plain text result into paragraphs for display
            modalResult.innerHTML = resultText.split('\n').filter(p => p.trim() !== '').map(p => `<p class="mb-4">${p}</p>`).join('');
            
            // Show copy button if content was successfully generated
            if (!resultText.includes("Sorry, an error occurred")) { // Simple check for success
                copyLetterBtn.classList.remove('hidden');
            } else {
                copyLetterBtn.classList.add('hidden');
            }

            generateLetterBtn.disabled = false; // Re-enable button
            generateLetterBtn.textContent = 'Generate Cover Letter';
        });

        // Copy to Clipboard functionality for the generated cover letter
        copyLetterBtn.addEventListener('click', () => {
            // Get all paragraph texts from the modal result and join them with newlines
            const paragraphs = Array.from(modalResult.querySelectorAll('p')).map(p => p.textContent);
            const textToCopy = paragraphs.join('\n\n'); // Join with double newline for paragraph separation

            // Use document.execCommand for broader iframe compatibility
            const tempTextArea = document.createElement('textarea');
            tempTextArea.value = textToCopy;
            document.body.appendChild(tempTextArea);
            tempTextArea.select();
            try {
                document.execCommand('copy');
                // Replace with a custom notification (e.g., a small temporary div)
                alert('Cover letter copied to clipboard!'); 
            } catch (err) {
                console.error('Failed to copy text: ', err);
                alert('Could not copy text. Please copy manually.');
            } finally {
                document.body.removeChild(tempTextArea);
            }
        });

    </script>
</body>
</html>